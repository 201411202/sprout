#!/bin/bash
#
# make_callload_users
#
# Bulk adds users for call load testing via the Ellis API.
#
# Usage: make_callload_users <host> <number of users to make> [<first user index>]

# Check (and default) the parameters.
host=$1
num=$2
start=$3
if [ "$host" = "" ] || [ "$num" = "" ]
then
  echo "Usage: $0 <host> <number of users to make> [<first user index>]" >&2
  exit 1
fi
if [ "$start" = "" ]
then
  start=1
fi
end=$((start + num - 1))

# We're trying to output a SIPp-readable file, so start with a valid header.
echo "SEQUENTIAL"

# Spin through the users.
for idx in $(seq $start $end)
do
  # First, create the subscriber account, specifying an index-derived username,
  # password and other details.
  curl -v http://$host/1/accounts/ -H "NGV-Signup-Code: vby77rb7e" -H "Content-Type: application/json" -d '{"username":"callload'$idx'","password":"password'$idx'","full_name":"Call Load Test Subscriber '$idx'","email":"callload'$idx'@example.com"}' >>make_callload_users.log 2>&1

  # Now, log in to this account, providing the username and password we just
  # specified.
  curl -v http://$host/1/session -H "Content-Type: application/json" -d '{"username":"callload'$idx'","password":"password'$idx'"}' -c /tmp/cookies.$$ >>make_callload_users.log 2>&1

  # Finally, create a directory number for this account.  The response (written
  # to /tmp/callload_user.json) will tell us the details.
  curl -v http://$host/1/accounts/callload$idx/numbers/ -H "Content-Type: application/json" -d '' -b /tmp/cookies.$$ -o /tmp/callload_user.json.$$ >>make_callload_users.log 2>&1
  cat /tmp/callload_user.json.$$ >>make_callload_users.log

  # Parse the username and password out of the JSON response.
  sip_username=$(</tmp/callload_user.json.$$ sed -e 's/^.*"sip_username": "//g'  | sed -e 's/".*$//g')
  sip_uri=$(</tmp/callload_user.json.$$ sed -e 's/^.*"sip_uri": "//g'  | sed -e 's/".*$//g')
  sip_password=$(</tmp/callload_user.json.$$ sed -e 's/^.*"sip_password": "//g'  | sed -e 's/".*$//g')

  # Record the username and authentication details in a form SIPp can parse.
  echo $sip_username';['authentication username=$sip_uri password=$sip_password']'

  # Tidy up.
  rm -f /tmp/cookies.$$ /tmp/callload_user.json.$$
done
